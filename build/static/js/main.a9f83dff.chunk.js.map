{"version":3,"sources":["logo.svg","serviceWorker.js","Todolist/Todoinput.js","Todolist/Todoing.js","Todolist/Todolist.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","Todoinput","handleinput","e","keyCode","props","addtodo","target","value","setState","val","handlechange","console","log","state","style","backgroundColor","width","height","color","marginLeft","paddingRight","fontSize","marginTop","htmlFor","onChange","this","type","id","placeholder","borderRadius","onKeyDown","Component","Todoing","handledelete","idx","todo","delete","todelete","float","textAlign","todolist1","length","map","item1","index1","key","checked","tosubmit","onClick","todolist2","item2","index2","toreturns","Todolist","addItem","list","list1","localStorage","setItem","JSON","stringify","deleteItem1","splice","deleteItem2","list2","submitItem","llist","returnItem","parse","getItem","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a9f83dff.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react'\r\n\r\nexport default class Todoinput extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            val : ''\r\n        }\r\n    }\r\n   handleinput = (e) => {\r\n       if(e.keyCode === 13){\r\n           this.props.addtodo(e.target.value);\r\n           this.setState({\r\n               val : ''\r\n           })\r\n       }\r\n   }\r\n   handlechange = (e) => {\r\n       this.setState({\r\n           val : e.target.value\r\n       })\r\n        console.log(this.state.val);\r\n   }\r\n    render() {\r\n        return (\r\n            <div style ={{backgroundColor : 'black', width : 'auto', height : 50}}>\r\n                <label style = {{color : 'white',marginLeft:'35%',paddingRight : '10%' ,fontSize : 20 ,marginTop :10}} htmlFor = 'head'>ToDoList </label>\r\n                <input onChange = {(e) =>this.handlechange(e)}  value = {this.state.val} type = 'text'  id = 'head' placeholder = '添加Todo' style = {{borderRadius : 5,width : 200,height : 20,marginTop :10}} onKeyDown = {(e) => {this.handleinput(e)}}></input>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Todoing extends Component {\r\n\r\n    handledelete = (idx) => {\r\n        this.props.todo(idx);\r\n    }\r\n    delete = (idx) => {\r\n        this.props.todelete(idx);\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                 <div>\r\n                    <div style = {{width : '100%'}}><h2 style = {{width : '20%',float : \"left\",marginLeft : '35%'}}>正在进行</h2><div style = {{backgroundColor : 'grey',width: 30, height :30,float : \"left\",marginTop : 20,marginLeft : 200,textAlign :'center'}}>{this.props.todolist1.length}</div></div>\r\n                    <ul>\r\n                        {this.props.todolist1.length > 0?this.props.todolist1.map((item1,index1) => {\r\n                            return <li key = {'1' + index1} style = {{float : \"left\",marginLeft : '40%' ,width : 200,height : 50}}><input type = 'checkbox' checked = {false}  onChange = {() => this.props.tosubmit(index1)}/>{item1}<button onClick = {() => this.handledelete(index1)}>删除</button></li>\r\n                        }):''}\r\n                    </ul>\r\n                </div>\r\n                <div>\r\n                    <div style = {{width : '100%'}}><h2 style = {{width : '20%',float : \"left\",marginLeft : '35%'}}>已经完成</h2><div style = {{backgroundColor : 'grey',width: 30, height :30,float : \"left\",marginTop : 20,marginLeft : 200,textAlign :'center'}}>{this.props.todolist2.length}</div></div>\r\n                    <ul>\r\n                        {this.props.todolist2.length > 0?this.props.todolist2.map((item2,index2) => {\r\n                            return <li key = {'2' + index2} style = {{float : \"left\",marginLeft : '40%',width : 200,height : 50}}><input type = 'checkbox'  checked = {true} onChange = {() =>  this.props.toreturns(index2)}/>{item2}<button onClick = {() => {this.delete(index2)}}>删除</button></li>\r\n                        }):''}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Todoinput from './Todoinput'\r\nimport Todoing from './Todoing'\r\nexport default class Todolist extends Component {\r\n    constructor(){\r\n        super();\r\n         if(localStorage.length === 0){\r\n        this.state = {\r\n            list1:[],\r\n            list2:[]\r\n        }\r\n    }else if(localStorage.length === 1){\r\n        this.state = {\r\n            list1:JSON.parse(localStorage.getItem('key1')),\r\n            list2:[]\r\n        }\r\n    }else if(localStorage.length === 2){\r\n        this.state = {\r\n            list1:JSON.parse(localStorage.getItem('key1')),\r\n            list2:JSON.parse(localStorage.getItem('key2'))\r\n        }\r\n    }else{\r\n        this.state = {\r\n            list1:[],\r\n            list2:[]\r\n        }\r\n    } \r\n    }\r\n    addItem = (value) => {\r\n            let list = this.state.list1;\r\n            list = [...list,value];\r\n            this.setState({\r\n                list1 : list\r\n            },() => localStorage.setItem('key1',JSON.stringify(list)))\r\n    }\r\n    deleteItem1 = (idx) => {\r\n        let list = this.state.list1;\r\n        list.splice(idx,1);\r\n        this.setState({\r\n            list1 : list\r\n        },() => localStorage.setItem('key1',JSON.stringify(list)))\r\n    }\r\n    deleteItem2 = (idx) => {\r\n        let list = this.state.list2;\r\n        list.splice(idx,1);\r\n        this.setState({\r\n            list2 : list\r\n        },() => localStorage.setItem('key2',JSON.stringify(list)))\r\n    }\r\n    submitItem = (idx) => {\r\n        let list = this.state.list1;\r\n        let llist = this.state.list2;\r\n        llist = [...llist,list[idx]];\r\n        list.splice(idx,1);\r\n        this.setState({\r\n            list1 : list,\r\n            list2 : llist\r\n        },() => {localStorage.setItem('key1',JSON.stringify(list));localStorage.setItem('key2',JSON.stringify(llist))})}\r\n    returnItem = (idx) => {\r\n        let list = this.state.list1;\r\n        let llist = this.state.list2;\r\n        list = [...list,llist[idx]];\r\n        llist.splice(idx,1);\r\n        this.setState({\r\n            list1 : list,\r\n            list2 : llist\r\n        },() => {localStorage.setItem('key1',JSON.stringify(list));localStorage.setItem('key2',JSON.stringify(llist))})\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n               <Todoinput addtodo = {this.addItem}/>\r\n               <Todoing todo = {this.deleteItem1} tosubmit = {this.submitItem} todelete = {this.deleteItem2} todolist1 = {this.state.list1} todolist2 = {this.state.list2} toreturns = {this.returnItem}/>\r\n            </div> \r\n            \r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Todolist from './Todolist/Todolist'\n\nReactDOM.render(<Todolist />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}